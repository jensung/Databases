Exercises

1. Write out a generic SELECT statement.
  SELECT *
  FROM table
  WHERE id = 1234

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
  SELECT = Safe
  FROM = From
  WHERE = Wolves

3. Given this dogs table, write queries to select the following pieces of data:
  Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

  Display the name, gender, and age of all dogs that are part Labrador.
    SELECT name, gender, age
    FROM dogs
    WHERE breed LIKE '%labrador%';
  Display the ids of all dogs that are under 1 year old.
    SELECT id
    FROM dogs
    WHERE age <1;
  Display the name and age of all dogs that are female and over 35lbs.
    SELECT name, age
    FROM dogs
    WHERE gender LIKE '%F%'
    AND weight > 35;
  Display all of the information about all dogs that are not Shepherd mixes.
    SELECT id, name, gender, age, weight, breed, intake_date, in_foster
    FROM dogs
    WHERE breed NOT LIKE '%shepherd%';
  Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
    SELECT id, age, weight, breed
    FROM dogs
    WHERE breed = 'great dane'
    OR weight > 60;

4. Given this cats table, what records are returned from these queries?

  SELECT name, adoption_date FROM cats;
    'Mushi' '2016-03-22'
    'Seashell' NULL
    'Azul' '2016-04-17'
    'Victoire' '2016-09-01'
    'Mala' NULL
  SELECT name, age FROM cats;
    'Mushi' 1
    'Seashell' 7
    'Azul' 3
    'Victoire' 7
    'Nala' 1

5. From the cats table, write queries to select the following pieces of data.
  Display all the information about all of the available cats.
    SELECT *
    FROM cats
  Display the name and sex of all cats who are 7 years old.
    SELECT name, gender
    FROM cats
    WHERE age = 7;
  Find all of the names of the cats, so you don’t choose duplicate names for new cats.
    SELECT name
    FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.
  If you can’t list these from memory, do these flashcards until you can!
  > : Greater than. Compares 2 values
  < : Less than. Compares 2 values
  = : Equals. Compares 2 values
  <= : Less than or equals to. Compares 2 values.
  >= : Greater than or equals to. Compares 2 values.
  != : Does not equals. Compares 2 values.
  <> : Greater than or less than. Compares 2 values.
  LIKE : Searches for a pattern. Often used with WHERE.
  BETWEEN : Searches between two values.
  IS DISTINCT FROM : Similar to greater than or less than except used if one of inputs is potentially null.
  IS TRUE / IS FALSE : Boolean operator where format is 'expression IS TRUE' or 'expression IS FALSE'. Input can potentially be null.
  IS NULL : Checks if value is null.
  AND : Checks if both expressions are true and returns row. Otherwise returns nothing.
  OR : Checks if either expressions are true and returns row if either are true.
  NOT : Checks if expression is false and returns row if false.

7. From the cats table, what data is returned from these queries?
  SELECT name FROM cats WHERE gender = ‘F’;
    'Seashell'
    'Nala'
  SELECT name FROM cats WHERE age <> 3;
    'Mushi'
    'Seashell'
    'Victoire'
    'Nala'
  SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
    3
    4
